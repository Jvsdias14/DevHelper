@page
@model DevHelper.Razor.Pages.PgProblema.IndexModel

@{
    ViewData["Title"] = "Feed";

    string TruncateDescription(string descricao, int maxLength)
    {
        if (string.IsNullOrEmpty(descricao) || descricao.Length <= maxLength)
        {
            return descricao;
        }
        var lastSpaceIndex = descricao.LastIndexOf(' ', maxLength);
        return lastSpaceIndex == -1 ? descricao.Substring(0, maxLength) : descricao.Substring(0, lastSpaceIndex);
    }
}

<h1>Feed</h1>
<hr />
<div class="feed-container">
    @foreach (var item in Model.Problema)
    {
        <div class="feed-item">
            <div>
                <strong>Usuário:</strong>
                <a href="@Url.Page("/PgCadUsuario/Details", new { Id = item.Usuario.Id })" class="clickable-label">
                    @Html.DisplayFor(modelItem => item.Usuario.Nome)
                </a>
            </div>
            <div>
                <strong>Nome do problema:</strong>
                <a href="@Url.Page("/PgProblema/Details", new { Id = item.Id })" class="clickable-label">
                    @Html.DisplayFor(modelItem => item.Nome)
                </a>
            </div>
            <div>
                <strong>Descrição:</strong>
                <span>
                    @if (item.Descricao.Length > 100)
                    {
                        @TruncateDescription(item.Descricao, 100)
                        <span class="leia-mais-separator">...</span> <a href="@Url.Page("/PgProblema/Details", new { Id = item.Id })" class="leia-mais-link">Leia mais</a>
                    }
                    else
                    {
                        @item.Descricao
                    }
                </span>
            </div>
            @if (item.ArquivoProblemas != null && item.ArquivoProblemas.Any())
            {
                <div>
                    <strong>Arquivos:</strong>
                    <span class="file-count">(@item.ArquivoProblemas.Count())</span>
                </div>
            }
            @if (item.Solucaos != null && item.Solucaos.Any())
            {
                <div>
                    <strong>Soluções:</strong>
                    <div class="card-deck">
                        @foreach (var solucao in item.Solucaos.Take(3)) // Mostrar apenas 3 soluções
                        {
                            <div class="card clickable-card" data-url="@Url.Page("/PgSolucao/Details", new { Id = solucao.Id })">
                                <div class="card-body">
                                    <p class="card-text">@solucao.Descricao</p>
                                </div>
                            </div>
                        }
                    </div>
                    @if (item.Solucaos.Count() > 3)
                    {
                        <a href="@Url.Page("/PgProblema/Details", new { Id = item.Id })" class="btn btn-load-more">Carregar mais soluções</a>
                    }
                </div>
            }
            <!-- Adiciona os botões de Like e Dislike -->
            <div>
                <button class="btn-like" data-id="@item.Id">👍 Like (@item.LikeCount)</button>
                <button class="btn-dislike" data-id="@item.Id">👎 Dislike (@item.DislikeCount)</button>
            </div>
        </div>
        <hr />
    }
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.clickable-card').forEach(card => {
            card.addEventListener('click', function () {
                window.location.href = this.dataset.url;
            });
        });

        document.querySelectorAll('.btn-like').forEach(button => {
            button.addEventListener('click', function () {
                var problemaId = this.getAttribute('data-id');
                fetch(`/PgProblema/Like/${problemaId}`, {
                    method: 'POST'
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        this.textContent = `👍 Like (${data.likeCount})`;
                    }
                });
            });
        });

        document.querySelectorAll('.btn-dislike').forEach(button => {
            button.addEventListener('click', function () {
                var problemaId = this.getAttribute('data-id');
                fetch(`/PgProblema/Dislike/${problemaId}`, {
                    method: 'POST'
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        this.textContent = `👎 Dislike (${data.dislikeCount})`;
                    }
                });
            });
        });
    </script>
}
