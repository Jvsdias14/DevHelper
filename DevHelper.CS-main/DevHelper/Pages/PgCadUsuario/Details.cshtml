@page
@model DevHelper.Razor.Pages.PgCadUsuario.DetailsModel
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var user = HttpContextAccessor.HttpContext.User;
    var userId = user.FindFirstValue(ClaimTypes.NameIdentifier);
    var userName = user.FindFirstValue(ClaimTypes.Name);
    var isOwner = Model.Usuario != null && userId == Model.Usuario.Id.ToString();
}

<h1 class="d-flex justify-content-between align-items-center">
    @Html.DisplayFor(model => model.Usuario.Nome)
    @if (isOwner)
    {
        <div class="d-flex">
            <div class="flex-fill me-2">
                <form method="post" asp-page-handler="Logout" class="m-0 p-0 h-100">
                    <button type="submit" class="btn btn-custom w-100 h-100 d-flex align-items-center justify-content-center">Logout</button>
                </form>
            </div>
            <div class="flex-fill">
                <a asp-page="/PgCadUsuario/Delete" asp-route-id="@userId" class="btn btn-custom w-100 h-100 d-flex align-items-center justify-content-center">Delete Account</a>
            </div>
        </div>
    }
</h1>

<div>
    <hr />
    <form method="post" style="margin-bottom: 20px;">
        <dl class="row">
            <dt class="col-sm-12">
                @Html.DisplayNameFor(model => model.Usuario.Biografia)
            </dt>
            <dd class="col-sm-12">
                @if (isOwner)
                {
                    <textarea asp-for="Usuario.Biografia" class="form-control w-100" rows="5"></textarea>
                }
                else
                {
                    <textarea asp-for="Usuario.Biografia" class="form-control w-100" rows="5" readonly></textarea>
                }
            </dd>
        </dl>

        @if (isOwner)
        {
            <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-custom">Salvar Alterações</button>
            </div>
        }
    </form>
</div>

<div class="row">
    <div class="col-md-6 border-end">
        <h3>Problemas</h3>
        @if (Model.Problemas != null && Model.Problemas.Any())
        {
            <table class="table table-light fixed-table">
                <thead>
                    <tr>
                        <th style="width: 30%;">Nome</th>
                        <th style="width: 55%;">Descrição</th>
                        <th style="width: 15%;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var problema in Model.Problemas)
                    {
                        <tr>
                            <td>@problema.Nome</td>
                            <td>@TruncateText(problema.Descricao, 150)</td>
                            <td>
                                <a asp-page="/PgProblema/Details" asp-route-id="@problema.Id" class="btn btn-sm btn-custom">Detalhes</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Nenhum problema encontrado.</p>
        }
    </div>
    <div class="col-md-6">
        <h3>Soluções</h3>
        @if (Model.Solucoes != null && Model.Solucoes.Any())
        {
            <table class="table table-light fixed-table">
                <thead>
                    <tr>
                        <th style="width: 30%;">Nome</th>
                        <th style="width: 55%;">Descrição</th>
                        <th style="width: 15%;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var solucao in Model.Solucoes)
                    {
                        <tr>
                            <td>@solucao.Problema?.Nome</td>
                            <td>@TruncateText(solucao.Descricao, 150)</td>
                            <td>
                                <a asp-page="/PgSolucao/Details" asp-route-id="@solucao.Id" class="btn btn-sm btn-custom">Detalhes</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Nenhuma solução encontrada.</p>
        }
    </div>
</div>

@functions {
    string TruncateText(string text, int maxLength)
    {
        if (string.IsNullOrEmpty(text) || text.Length <= maxLength)
        {
            return text;
        }

        // Tentativa de truncar sem quebrar palavras
        int end = maxLength;
        while (end > 0 && text[end] != ' ')
        {
            end--;
        }

        // Se não houver espaço, simplesmente truncar no limite máximo de caracteres
        if (end == 0)
        {
            end = maxLength;
        }

        return text.Substring(0, end) + "...";
    }
}

<style>
    .btn.btn-custom {
        background-color: #22ffb6;
        color: #000;
        border: none;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
    }

        .btn.btn-custom:hover {
            background-color: #1ccc9a;
            color: #fff;
        }

    .text-custom {
        color: #22ffb6;
    }

    .table-light {
        background-color: #f9f9f9;
        color: #000;
    }

    .fixed-table th, .fixed-table td {
        border: 1px solid #333;
        word-wrap: break-word;
        white-space: pre-line;
    }

    .list-group-item {
        border: none;
        border-bottom: 1px solid #555;
    }

        .list-group-item:last-child {
            border-bottom: none;
        }

    .float-end {
        float: right;
    }

    /* Ajustes para garantir a flexibilidade das tabelas */
    .table {
        table-layout: fixed;
        width: 100%;
    }
</style>
